package programaFTLC;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYStepRenderer;
import org.jfree.data.xy.DefaultXYDataset;
/**
 *
 * @author paco_
 */
public class graficar extends javax.swing.JFrame {

    int x, y;
    
    public graficar() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pa = new javax.swing.JPanel();
        button3 = new boton.button();
        button2 = new boton.button();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nrl = new javax.swing.JButton();
        nrzI = new javax.swing.JButton();
        unipol = new javax.swing.JButton();
        Bipolar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        codifL = new javax.swing.JTextField();
        codifL1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        codifL2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        codifL3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        limpia = new javax.swing.JButton();
        inputdatos3 = new javax.swing.JTextField();
        inputdatosUni = new javax.swing.JTextField();
        inputdatoBip = new javax.swing.JTextField();
        inputdatosI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pa.setBackground(new java.awt.Color(51, 51, 51));
        pa.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                paMouseDragged(evt);
            }
        });
        pa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                paMousePressed(evt);
            }
        });
        pa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        button3.setBackground(new java.awt.Color(0, 0, 0));
        button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Subtract_20px_1.png"))); // NOI18N
        button3.setColorHover(new java.awt.Color(203, 203, 203));
        button3.setColorNormal(new java.awt.Color(0, 0, 0));
        button3.setColorPressed(new java.awt.Color(203, 203, 203));
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });
        pa.add(button3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, 50, -1));

        button2.setBackground(new java.awt.Color(0, 0, 0));
        button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Delete_20px_1.png"))); // NOI18N
        button2.setColorHover(new java.awt.Color(51, 51, 51));
        button2.setColorNormal(new java.awt.Color(0, 0, 0));
        button2.setColorPressed(new java.awt.Color(255, 255, 255));
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });
        pa.add(button2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 0, 50, -1));

        back.setIcon(new javax.swing.ImageIcon("C:\\Users\\paco_\\Pictures\\volv3r.png")); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        pa.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 40));

        jLabel1.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        jLabel1.setText("NRZ-L");

        jLabel2.setFont(new java.awt.Font("Candara", 0, 36)); // NOI18N
        jLabel2.setText("Gr√°ficas de las diferentes codificaciones: ");

        jLabel3.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        jLabel3.setText("Bipolar");

        jLabel4.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        jLabel4.setText("NRZ-I");

        jLabel5.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
        jLabel5.setText("Unipolar");

        nrl.setText("Graficar");
        nrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrlActionPerformed(evt);
            }
        });

        nrzI.setText("Graficar");
        nrzI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrzIActionPerformed(evt);
            }
        });

        unipol.setText("Graficar");
        unipol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unipolActionPerformed(evt);
            }
        });

        Bipolar.setText("Graficar");
        Bipolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BipolarActionPerformed(evt);
            }
        });

        jLabel6.setText("Codificada:");

        codifL.setEditable(false);

        codifL1.setEditable(false);

        jLabel7.setText("Codificada:");

        codifL2.setEditable(false);

        jLabel8.setText("Codificada:");

        codifL3.setEditable(false);

        jLabel9.setText("Codificada:");

        limpia.setBackground(new java.awt.Color(204, 204, 204));
        limpia.setText("CE");
        limpia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputdatosI, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputdatos3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(inputdatoBip, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputdatosUni, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpia, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codifL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(nrl, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codifL1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(nrzI, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codifL2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codifL3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(unipol, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(Bipolar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputdatos3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputdatosI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputdatosUni, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputdatoBip, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(limpia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codifL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nrl, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codifL1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nrzI, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codifL2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unipol, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codifL3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bipolar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
        this.setState(ventanaPrcp.ICONIFIED);
    }//GEN-LAST:event_button3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_button2ActionPerformed

    private void paMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paMouseDragged
        int xx = evt.getXOnScreen();
        int xy = evt.getYOnScreen();

        this.setLocation(xx-x,xy-y);
    }//GEN-LAST:event_paMouseDragged

    private void paMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paMousePressed
        // TODO add your handling code here:
        x= evt.getX();
        y= evt.getY();
    }//GEN-LAST:event_paMousePressed

    private void nrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrlActionPerformed
    String cadenaBits = inputdatos3.getText();
    StringBuilder codigo = new StringBuilder();
   //System.out.println("Cadena codificada: " + codigo);
        char nivel = '1';
        for (int i = 0; i < cadenaBits.length(); i++) {
            if (cadenaBits.charAt(i) == '0') {
                codigo.append(nivel);
            } else {
                nivel = (nivel == '1') ? '0' : '1';
                codigo.append(nivel);
            }
        }
        String codigoString = codigo.toString();
        System.out.println("Cadena codificada: " + codigoString);
        codifL.setText(codigoString);
        //Graf
    List<Double> bits = new ArrayList<>();
        List<Double> codigos = new ArrayList<>();
        for (int i = 0; i < cadenaBits.length(); i++) {
            bits.add((double) i);
            codigos.add((double) (codigo.charAt(i) == '0' ? 0 : 1));
        }
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][bits.size()];
        for (int i = 0; i < bits.size(); i++) {
            data[0][i] = bits.get(i);
            data[1][i] = codigos.get(i);
        }
        dataset.addSeries("Bits", data);
        
        
        JFreeChart chart = ChartFactory.createXYLineChart(
            "Codificaci√≥n de la se√±al: "+cadenaBits+" a NRZ-L es: "+codigoString,
            "Muestra ",
            "Valor", 
            dataset
        );
        XYPlot plot = chart.getXYPlot();
        XYStepRenderer renderer = new XYStepRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        plot.setRenderer(renderer);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(-0.5, 1.5);
        //AgGraf
        
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(635, 240));
        JFrame frame = new JFrame("Se√±al NRZ-L");
              
        //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setContentPane(panel);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }//GEN-LAST:event_nrlActionPerformed

    private void nrzIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrzIActionPerformed
        
    String cadenaBits = inputdatosI.getText();
    StringBuilder codigo = new StringBuilder();            
    int nivel = 0;
    for (int i = 0; i < cadenaBits.length(); i++) {
        if (cadenaBits.charAt(i) == '0') {
            codigo.append(nivel);
        } else {
            if (nivel == 1) {
                nivel = 0;
            } else {
                nivel = 1;
            }
            codigo.append(nivel);
        }
    }
    String codigoString = codigo.toString();    
    System.out.println("Cadena codificada: " + codigoString);
    codifL1.setText(codigoString);
        List<Double> bits = new ArrayList<>();
        List<Double> codigos = new ArrayList<>();
        for (int i = 0; i < cadenaBits.length(); i++) {
            bits.add((double) i);
            codigos.add((double) (codigo.charAt(i) == '0' ? 0 : 1));
        }
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][bits.size()];
        for (int i = 0; i < bits.size(); i++) {
            data[0][i] = bits.get(i);
            data[1][i] = codigos.get(i);
        }
        dataset.addSeries("Bits", data);
        JFreeChart chart = ChartFactory.createXYLineChart(
            "Codificaci√≥n de la se√±al: "+cadenaBits+" a NRZ-I es: "+codigoString,
            "Muestra",
            "Valor",
            dataset
        );
        XYPlot plot = chart.getXYPlot();
        XYStepRenderer renderer = new XYStepRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        plot.setRenderer(renderer);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(-0.5, 1.5);
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(635, 240));
        JFrame frame = new JFrame("Se√±al en NRZ-I");
        //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setContentPane(panel);
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);
    
    
    }//GEN-LAST:event_nrzIActionPerformed

    private void unipolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unipolActionPerformed
        String cadenaBits = inputdatosUni.getText();
        StringBuilder codigo = new StringBuilder();
        for (int i = 0; i < cadenaBits.length(); i++) {
            if (cadenaBits.charAt(i) == '0') {
                codigo.append('0');
            } else {
                codigo.append('1');
            }
        }
    String codigoString = codigo.toString();    
    System.out.println("Cadena codificada: " + codigoString);
    codifL2.setText(codigoString);
            List<Double> bits = new ArrayList<>();
        List<Double> codigos = new ArrayList<>();
        for (int i = 0; i < cadenaBits.length(); i++) {
            bits.add((double) i);
            codigos.add((double) (codigo.charAt(i) == '0' ? 0 : 1));
        }
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][bits.size()];
        for (int i = 0; i < bits.size(); i++) {
            data[0][i] = bits.get(i);
            data[1][i] = codigos.get(i);
        }
        dataset.addSeries("Bits", data);
        JFreeChart chart = ChartFactory.createXYLineChart(
            "Codificaci√≥n de la se√±al: "+cadenaBits+" a unipolar es: "+codigoString,
            "Muestra",
            "Valor",
            dataset
        );
        XYPlot plot = chart.getXYPlot();
        XYStepRenderer renderer = new XYStepRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        plot.setRenderer(renderer);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(-0.5, 1.5);
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(635, 240));
        JFrame frame = new JFrame("Se√±al en Unipolar");
        //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setContentPane(panel);
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_unipolActionPerformed

    private void BipolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BipolarActionPerformed
    String cadenaBits = inputdatoBip.getText();   
    StringBuilder codigo = new StringBuilder();
    int nivel = 1;
    for (int i = 0; i < cadenaBits.length(); i++) {
        if (cadenaBits.charAt(i) == '0') {
            codigo.append('0');
        } else {
            codigo.append(nivel);
            nivel = (nivel == 1) ? -1 : 1;
        }
    }
    String codigoString = codigo.toString();    
    System.out.println("Cadena codificada: " + codigoString);
    codifL3.setText(codigoString);
        List<Double> bits = new ArrayList<>();
        List<Double> codigos = new ArrayList<>();
        for (int i = 0; i < cadenaBits.length(); i++) {
            bits.add((double) i);
            codigos.add((double) (codigo.charAt(i) == '0' ? 0 : 1));
        }
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][bits.size()];
        for (int i = 0; i < bits.size(); i++) {
            data[0][i] = bits.get(i);
            data[1][i] = codigos.get(i);
        }
        dataset.addSeries("Bits", data);
        JFreeChart chart = ChartFactory.createXYLineChart(
            "Codificaci√≥n de la se√±al: "+cadenaBits+" a bipolar es: "+codigoString,
            "Muestra",
            "Valor",
            dataset
        );
        XYPlot plot = chart.getXYPlot();
        XYStepRenderer renderer = new XYStepRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        plot.setRenderer(renderer);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(-0.5, 1.5);
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(635, 240));
        JFrame frame = new JFrame("Se√±al en Bipolar");
        
        frame.setContentPane(panel);
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);
    
    }//GEN-LAST:event_BipolarActionPerformed

    private void limpiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiaActionPerformed
        inputdatos3.setText("");
        inputdatosUni.setText("");
        inputdatoBip.setText("");
        inputdatosI.setText("");
        codifL.setText("");
        codifL1.setText("");
        codifL2.setText("");
        codifL3.setText("");
        
    }//GEN-LAST:event_limpiaActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        ventanaPrcp v = new ventanaPrcp();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graficar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graficar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graficar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graficar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new graficar().setVisible(true);
                
            }
    
     });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bipolar;
    private javax.swing.JButton back;
    private boton.button button2;
    private boton.button button3;
    private javax.swing.JTextField codifL;
    private javax.swing.JTextField codifL1;
    private javax.swing.JTextField codifL2;
    private javax.swing.JTextField codifL3;
    private javax.swing.JTextField inputdatoBip;
    private javax.swing.JTextField inputdatos3;
    private javax.swing.JTextField inputdatosI;
    private javax.swing.JTextField inputdatosUni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpia;
    private javax.swing.JButton nrl;
    private javax.swing.JButton nrzI;
    private javax.swing.JPanel pa;
    private javax.swing.JButton unipol;
    // End of variables declaration//GEN-END:variables
}
